#include <stdio.h>
 
int main(void) {
	int **P,n,i,j,c=1;
	//Entrer la taille du tableau
	scanf("%d",&n);
	//Allocation dynamique d'une matrice d'ordre (2*n-1)*(2*n-1)
	P=(int **)malloc(sizeof(int**)*(2*n-1));
	for(i=0;i<2*n-1;i++)
	    P[i]=(int *)malloc(sizeof(int *)*(2*n-1));
 
    //Initialisation des elements du tableau par 0
    /*for(i=0;i<2*n-1;i++)
        for(j=0;j<2*n-1;j++)
            P[i][j]=0;*/
 
    //Remplissage du tableau (1er damier)
	for(j=0;j<n;j++)
	    for(i=n-1;i<2*n-1;i++)
	        {
	            P[j+(i+1-n)][i-j]=c++;
	        }
 
    //2eme Damier
    for(i=0;i<n/2;i++)
        {
            for(j=n/2+1;j<2*n-1-(n/2+1);j++)
                {
                    if(P[i][j]!=0) // if((j+i>=n-1)&&(j-i<=n-1)&&(j%2==i%2))
                    {
                        //On peut affecter les 3 quadrants
                        //En utilisant un seul parcours
                        P[i+n][j]=P[i][j];
                        P[j][i+n]=P[j][i];
                        P[n-2-i][j]=P[2*(n-1)-i][j];
                        P[j][n-2-i]=P[j][2*(n-1)-i];
                    }
                }
        }
	
       /*for(i=0;i<n/2;i++)
        for(j=n/2+1;j<2*n-1-(n/2+1);j++)
            if(P[i][j]!=0)
                P[i+n][j]=P[i][j];

    for(i=n/2+1;i<2*n-1-(n/2+1);i++)
        for(j=0;j<n/2;j++)
            if(P[i][j]!=0)
                P[i][j+n]=P[i][j];
                
	for(i=n/2+1;i<2*n-1-(n/2+1);i++)
        for(j=2*n-1-n/2;j<2*n-1;j++)
            if(P[i][j]!=0)
                P[i][j-n]=P[i][j];
                    
	for(i=2*n-1-n/2;i<2*n-1;i++)
        for(j=n/2+1;j<2*n-1-(n/2+1);j++)
            if(P[i][j]!=0)
                P[i-n][j]=P[i][j];*/
		
   //Affichage du carrÃ© magique
	for(j=n/2;j<n/2+n;j++)
	    {
	        for(i=n/2;i<n/2+n;i++)
	        {
	            printf("%d\t",P[j][i]);
 
	        }
	        printf("\n");
	    }
	return 0;
}
